name: Compile and Test
on:
  pull_request:
    branches:
      - master
jobs:
  ShellTest:
    strategy:
      fail-fast: true
      matrix:
        command:
          - go
          - aws
          - python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Dockerized
        uses: actions/checkout@v2
      - name: Compile
        run:  bin/dockerized --compile
      - name: "Test: dockerized --shell ${{matrix.command}}"
        env:
          COMMAND: "${{matrix.command}}"
        run: |
          bin/dockerized --shell $COMMAND -c 'echo $HOST_HOSTNAME' | tee ~/shell.log
          grep $(hostname) ~/shell.log
  CompileAndTest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
#          - windows-2022
#          - macos-10.15
      max-parallel: 1
      fail-fast: true
    steps:
      # region mac
      - name: Install Docker
        if:  runner.os == 'macOS'
        uses: docker-practice/actions-setup-docker@master
      # endregion

      - name: Checkout Dockerized
        uses: actions/checkout@v2

      - run: bin/dockerized --help
        shell: bash

      - run: bin/dockerized go version
        shell: bash

      - name: "Test: version from environment variable"
        run: GO_VERSION=1.16.15 bin/dockerized go version | grep "go1.16.15"
        shell: bash

      - name: "Test: version from dockerized.env"
        run: |
          mkdir -p project
          cd project
          echo 'GO_VERSION=1.17.8' > dockerized.env
          ../bin/dockerized go version | grep "1.17.8"
        shell: bash


      # region windows
      - if: runner.os == 'windows'
        name: "dockerized --compile (cmd)"
        shell: cmd
        run: bin/dockerized --compile
      - if: runner.os == 'windows'
        name: "dockerized --compile (powershell)"
        shell: cmd
        run: bin/dockerized --compile
      # endregion
